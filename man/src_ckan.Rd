% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr.R
\name{src_ckan}
\alias{src_ckan}
\alias{dplyr-interface}
\title{Connect to CKAN with dplyr}
\usage{
src_ckan(url)
}
\arguments{
\item{url, }{the url of the CKAN instance}
}
\description{
Use \code{src_ckan} to connect to an existing CKAN instance and \code{tbl} to
connect to tables within that CKAN based on the DataStore Data API.
}
\details{
The function returns a
\href{https://dbi.r-dbi.org/reference/DBIConnection-class.html}{\code{DBI::dbConnect()}}
object, which can be then used by
\href{https://dbplyr.tidyverse.org/articles/dbplyr.html}{dbplyr} and
}
\examples{
\dontrun{
library(dplyr)
library(DBI)

# To connect to a CKAN instance first create a src:
my_ckan <- src_ckan("https://www.data.qld.gov.au/")

summary(my_ckan)
dplyr::db_desc(my_ckan)

# dplyr has changed its dbplyr backend API to version 2
dbplyr::dbplyr_edition(my_ckan)

# List all tables in the CKAN database
tbl_list <- DBI::dbListTables(my_ckan, limit=5)
tbl_list

# Create an in-memory table from a CKAN database table
tbl1 <- dplyr::tbl(my_ckan, tbl_list[1])
tbl2 <- dplyr::tbl(my_ckan, "587f65ae-6675-4b8e-bac5-606ce7f4446a")

# You can use the dplyr verbs with tbl. For example:
dplyr::filter(tbl1, variable_name == "value")
dplyr::select(tbl2, `Density class`, Full)
}
}
